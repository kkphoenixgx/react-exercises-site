{"version":3,"file":"static/js/910.8fe94192.chunk.js","mappings":"oQAEaA,EAAO,SAAH,GAA4B,IAAvBC,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAChC,OACE,iBAAKC,UAAU,OAAM,WACnB,gBAAKC,IAAKJ,EAAOK,IAAKJ,KACtB,iBAAKE,UAAU,eAAc,WAC3B,wBAAKF,KACL,uBAAIC,SAId,E,oBCXaI,EAAU,yCAAG,yGAGmD,OADrEC,EAAgBC,MAAM,8CACtBC,EAAiBD,MAAM,+CAA+C,EAAD,OAE7CE,QAAQC,IAAI,CAACJ,EAAeE,IAAiB,KAAD,EAAtD,OAAsD,wBAAnEG,EAAK,KAAEC,EAAM,eAEID,EAAME,OAAM,QAArB,OAATC,EAAS,iBACUF,EAAOC,OAAO,KAAD,GAWpC,OAXIE,EAAU,OAEVC,EAAiBF,EAAUG,KAAI,SAACC,EAAMC,GACxC,IAAMC,EAASL,EAAWI,GAAOE,IAAIC,QAAQ,8BAA+B,8BAA8BC,MAAM,KAC1GC,EAAKJ,EAAOA,EAAOK,OAAS,GAC5BC,EAAKN,EAAOA,EAAOK,OAAS,GAKlC,OAHAL,EAAOA,EAAOK,OAAS,GAAKC,EAC5BN,EAAOA,EAAOK,OAAS,GAAKD,GAErB,kBAAKN,GAAI,IAAEnB,MAAOqB,EAAOO,KAAK,MACzC,IAAE,kBAEKX,GAAc,4CACtB,kBAtBsB,mCCCVY,EAAc,SAACC,GACxB,OACE,mBAAQ3B,UAAU,cAAc4B,QAASD,EAAME,SAAS,SACrDF,EAAMG,MAGf,ECFqBC,EAAW,qJAgC7B,OAhC6B,oCAC9BC,MAAQ,CACNvB,MAAO,GACPwB,SAAU,GACVC,KAAM,EACNC,aAAc,IACd,EAMFC,WAAS,uBAAG,+FACe,OADf,EACmB,EAAKJ,MAA3BE,EAAI,EAAJA,KAAMC,EAAY,EAAZA,aAAY,SACEhC,IAAa,KAAD,EAAnCW,EAAc,OAElB,EAAKuB,SACH,CACE5B,MAAOK,EAAewB,MAAMJ,EAAMC,GAClCF,SAAUnB,IAEZ,2CACH,EAEDyB,cAAgB,WACd,MAAgD,EAAKP,MAA7CvB,EAAK,EAALA,MAAOwB,EAAQ,EAARA,SAAUE,EAAY,EAAZA,aAEnBK,EAFqC,EAAJN,KAEfC,EAClBM,EAAaR,EAASK,MAAME,EAAUA,EAAWL,GACvD1B,EAAMiC,KAAI,MAAVjC,GAAK,OAASgC,IAEd,EAAKJ,SAAS,CAAC5B,MAAAA,EAAOyB,KAAMM,GAC9B,EAAC,EAmBA,OAnBA,yCAxBD,WACEG,KAAKP,WACP,GAAC,oBAyBD,WACE,IAAQ3B,EAAUkC,KAAKX,MAAfvB,MAEP,OACC,qBAAST,UAAU,8BAA6B,WAC9C,mEACA,gBAAKA,UAAU,QAAO,SACnBS,EAAMM,KAAI,SAAAC,GAAI,OACb,SAACpB,EAAI,CAAeC,MAAOmB,EAAKnB,MAAOC,MAAOkB,EAAKlB,MAAO8C,GAAI5B,EAAK4B,GAAI7C,KAAMiB,EAAKjB,MAAvEiB,EAAK4B,GAA0E,OAI9F,SAAClB,EAAW,CAACI,KAAK,cAAcD,SAAUc,KAAKJ,kBAIrD,KAAC,EAnD6B,CAASM,EAAAA,U","sources":["components/react-exercises/exerciseOne/exerciseOne-components/Posts/Post.jsx","components/react-exercises/exerciseOne/exerciseOne-Utils/fetchPosts.js","components/react-exercises/exerciseOne/exerciseOne-components/loadMorePostsButton/PostsButton.jsx","components/react-exercises/exerciseOne/exercise1.jsx"],"sourcesContent":["import \"./post.css\"\r\n\r\nexport const Post = ({cover, title, body})=>{\r\n    return (\r\n      <div className=\"post\">\r\n        <img src={cover} alt={title} />\r\n        <div className=\"post-content\">\r\n          <h3>{title}</h3>\r\n          <p>{body}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n}","\r\nexport const fetchPosts = async  ()=>{\r\n\r\n  const postsResponse = fetch('https://jsonplaceholder.typicode.com/posts');\r\n  const photosResponse = fetch('https://jsonplaceholder.typicode.com/photos');\r\n  \r\n  const [posts, photos] = await Promise.all([postsResponse, photosResponse]);\r\n  \r\n  const postsJson = await posts.json()\r\n  const photosJson = await photos.json();\r\n  \r\n  const postsAndPhotos = postsJson.map((post, index) => {\r\n      const newUrl = photosJson[index].url.replace('https://via.placeholder.com', 'https://picsum.photos/seed').split(\"/\")\r\n      const p1 = newUrl[newUrl.length - 1] \r\n      const p2 = newUrl[newUrl.length - 2]\r\n\r\n      newUrl[newUrl.length - 1] = p2\r\n      newUrl[newUrl.length - 2] = p1\r\n      \r\n      return { ...post, cover: newUrl.join(\"/\") };\r\n  })\r\n\r\n  return postsAndPhotos;\r\n}","import \"./postButton.css\"\n\nexport const PostsButton = (props)=>{\n    return (\n      <button className=\"postsButton\" onClick={props.callback} >\n        {props.text}\n      </button>\n    )\n}","import { Component } from \"react\";\r\nimport \"./reactExercise.css\";\r\nimport { Post } from \"./exerciseOne-components/Posts/Post\";\r\nimport { fetchPosts } from \"./exerciseOne-Utils/fetchPosts\";\r\nimport { PostsButton } from \"./exerciseOne-components/loadMorePostsButton/PostsButton\";\r\n\r\nexport default class ExerciseOne extends Component {\r\n  state = {\r\n    posts: [],\r\n    allPosts: [],\r\n    page: 0,\r\n    postsPerPage: 10,\r\n  };\r\n  \r\n  componentDidMount() {\r\n    this.loadPosts();\r\n  }\r\n  \r\n  loadPosts = async () => {\r\n    const {page, postsPerPage} = this.state; \r\n    let postsAndPhotos = await fetchPosts();\r\n\r\n    this.setState(\r\n      { \r\n        posts: postsAndPhotos.slice(page, postsPerPage),\r\n        allPosts: postsAndPhotos\r\n      }\r\n    );\r\n  }\r\n\r\n  loadMorePosts = ()=>{\r\n    const { posts, allPosts, postsPerPage, page } = this.state\r\n  \r\n    const nextPage = page + postsPerPage;\r\n    const nextPosts  = allPosts.slice(nextPage, nextPage + postsPerPage);\r\n    posts.push(...nextPosts);\r\n  \r\n    this.setState({posts, page: nextPage});\r\n  }\r\n  \r\n  \r\n  render() {\r\n    const { posts } = this.state;\r\n    \r\n     return (\r\n      <section className=\"react-exerciseOne-container\">\r\n        <h2>Fetch posts from json api 2025-02-03 </h2>\r\n        <div className=\"posts\">\r\n          {posts.map(post => (\r\n            <Post key={post.id} cover={post.cover} title={post.title} id={post.id} body={post.body} />\r\n          ))}\r\n        </div>\r\n\r\n        <PostsButton text=\"More Posts!\" callback={this.loadMorePosts} />\r\n\r\n      </section>\r\n    );\r\n  }\r\n}"],"names":["Post","cover","title","body","className","src","alt","fetchPosts","postsResponse","fetch","photosResponse","Promise","all","posts","photos","json","postsJson","photosJson","postsAndPhotos","map","post","index","newUrl","url","replace","split","p1","length","p2","join","PostsButton","props","onClick","callback","text","ExerciseOne","state","allPosts","page","postsPerPage","loadPosts","setState","slice","loadMorePosts","nextPage","nextPosts","push","this","id","Component"],"sourceRoot":""}